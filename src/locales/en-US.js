export default {
  common: {
    close: 'Close',
    cancel: 'Cancel',
    confirm: 'Confirm'
  },
  app: {
    title: 'Augment Token Manager',
    appHome: 'App Home',
    pluginHome: 'Plugin Home',
    viewTokens: 'View Tokens',
    bookmarkManager: 'Bookmark Manager',
    emailHelper: 'Email Helper',
    outlookManager: 'Outlook Manager',
    proxySettings: 'Proxy Settings',
    switchToLight: 'Switch to Light Mode',
    switchToDark: 'Switch to Dark Mode',
    switchToEnglish: 'Switch to English',
    switchToChinese: 'Switch to Chinese',
    settings: 'Settings',
    checkForUpdates: 'Check for Updates'
  },
  update: {
    newVersionAvailable: 'New Version Available',
    currentVersion: 'Current Version',
    latestVersion: 'Latest Version',
    installMethods: 'Installation Methods',
    githubRelease: 'GitHub Release',
    homebrewCommand: 'Homebrew Command',
    scoopCommand: 'Scoop Command',
    copyCommand: 'Copy Command',
    commandCopied: 'Command Copied',
    checkingForUpdates: 'Checking for updates...',
    upToDate: 'You are up to date',
    checkFailed: 'Failed to check for updates',
    close: 'Close'
  },
  bookmarkManager: {
    title: 'Bookmark Manager',
    openDataFolder: 'Open Data Storage Folder',
    addBookmark: 'Add Bookmark',
    editBookmark: 'Edit Bookmark',
    deleteBookmark: 'Delete Bookmark',
    openBookmark: 'Open Bookmark',
    emptyState: 'No bookmarks added yet',
    emptyDescription: 'Click "Add Bookmark" to add your frequently used websites',
    form: {
      name: 'Bookmark Name',
      url: 'URL',
      description: 'Description (Optional)',
      save: 'Save',
      cancel: 'Cancel'
    },
    messages: {
      addSuccess: 'Bookmark added successfully',
      updateSuccess: 'Bookmark updated successfully',
      deleteSuccess: 'Bookmark deleted successfully',
      openFolderFailed: 'Failed to open folder'
    },
    dialog: {
      selectOpenMethod: 'Select Open Method',
      copyToClipboard: 'Copy to Clipboard',
      openInBrowser: 'Open in Browser',
      openInBuiltIn: 'Open in Built-in Browser',
      cancel: 'Cancel'
    }
  },
  outlookManager: {
    title: 'Outlook Email Manager',
    addAccount: 'Add Email Account',
    sessionNotice: 'Account information is only valid for the current session and needs to be re-added after closing the app',
    accountInfo: 'Account Information',
    placeholder: 'Email----Password----Refresh Token----Client ID',
    inputHint: 'Please enter in format: Email----Password----Refresh Token----Client ID',
    addAccountBtn: 'Add Account',
    checkStatus: 'Check Status',
    viewEmails: 'View Emails',
    deleteAccount: 'Delete Account',
    accountList: 'Email Account List',
    emptyState: 'No email accounts added yet',
    emptyDescription: 'Please add an email account to get started',
    status: {
      checking: 'Checking...',
      online: 'Online',
      offline: 'Offline',
      error: 'Error'
    },
    messages: {
      addSuccess: 'Email account added successfully',
      deleteSuccess: 'Email account deleted successfully',
      invalidFormat: 'Account information format is incorrect',
      statusCheckFailed: 'Status check failed'
    }
  },
  emailHelper: {
    title: 'Email Helper',
    settings: 'Settings',
    tokenRequired: 'Please configure email server and get token first',
    emailType: 'Email Type',
    randomEmail: 'Random Email',
    customEmail: 'Custom Email',
    customEmailName: 'Custom Email Name',
    customEmailPlaceholder: "Enter email name (without {'@'}domain)",
    createEmailBtn: 'Create Email',
    creating: 'Creating...',
    emailList: 'Email List',
    stopMonitor: 'Stop Monitor',
    emptyState: 'No emails yet',
    emptyDescription: 'Click the button above to create a new email',
    copyEmail: 'Copy Email',
    copyPassword: 'Copy Password',
    copyCode: 'Copy Code',
    startMonitor: 'Start Monitor',
    monitoring: 'Monitoring',
    viewEmails: 'View Emails',
    delete: 'Delete',
    password: 'Password',
    settingsTitle: 'Email Server Settings',
    serverUrl: 'Server URL',
    serverUrlPlaceholder: 'e.g., https://wyattzheng.eu.org',
    adminEmail: 'Admin Email',
    adminEmailPlaceholder: 'Enter admin email',
    adminPassword: 'Admin Password',
    adminPasswordPlaceholder: 'Enter admin password',
    cardSettings: 'Card Settings',
    cardBin: 'Credit Card BIN',
    cardBinPlaceholder: 'Enter credit card BIN (6-12 digits)',
    cardBinHint: 'Used to generate test credit card numbers, default: 515462002040',
    cardBinRequired: 'Card BIN must be at least 6 digits',
    addressSettings: 'Address Settings',
    addressHint: 'Leave empty to auto-generate random values',
    country: 'Country Code',
    countryPlaceholder: 'e.g., CN, US',
    countryHint: '2-letter country code, default CN',
    province: 'Province/State',
    provincePlaceholder: 'e.g., Guangdong',
    city: 'City',
    cityPlaceholder: 'e.g., Shenzhen',
    street: 'Street Address',
    streetPlaceholder: 'e.g., 100 Zhongshan Road',
    postalCode: 'Postal Code',
    postalCodePlaceholder: 'e.g., 518000',
    cardSettingsSaved: 'Card settings saved',
    save: 'Save',
    cancel: 'Cancel',
    emailDomain: 'Email Domain',
    selectDomain: 'Select Domain',
    customDomain: 'Custom Domain',
    emailDomainPlaceholder: "e.g., {'@'}example.com",
    deleteDomain: 'Delete this domain',
    domainDeleted: 'Domain deleted',
    emailPrefix: 'Email Prefix',
    emailPrefixPlaceholder: 'Default: augment',
    saveSettings: 'Save Settings and Get Token',
    gettingToken: 'Getting Token...',
    exportEmails: 'Export Email List',
    importEmails: 'Import Email List',
    clearAll: 'Clear All Emails',
    currentToken: 'Current Token',
    tokenConfigured: 'Token Configured',
    emailContent: 'Email Content',
    from: 'From',
    subject: 'Subject',
    date: 'Date',
    back: 'Back',
    loadingEmails: 'Loading emails...',
    noEmails: 'No emails',
    loadingEmailContent: 'Loading email content...',
    emailCopied: 'Email address copied',
    passwordCopied: 'Password copied',
    codeCopied: 'Verification code copied',
    copyFailed: 'Copy failed',
    tokenSuccess: 'Token obtained successfully',
    tokenFailed: 'Failed to get token',
    creatingEmail: 'Creating email',
    createSuccess: 'Email created successfully',
    createFailed: 'Failed to create email',
    deletingEmail: 'Deleting email...',
    cloudDeleteFailed: 'Cloud deletion failed',
    confirmDeleteLocal: 'Continue to delete local record?',
    deleteAborted: 'Deletion cancelled',
    cloudDeleteError: 'Cloud deletion error',
    deleteSuccess: 'Email deleted successfully',
    deleteLocalSuccess: 'Local email deleted successfully',
    emailNotFound: 'Email not found',
    deleteFailed: 'Deletion failed',
    confirmClearAll: 'Are you sure you want to clear all emails? This action cannot be undone!',
    clearAllTitle: 'Clear All Emails',
    clearAllMessage: 'Please select clear mode:',
    clearLocalOnly: 'Clear Local List Only',
    clearLocalAndCloud: 'Clear Local and Cloud',
    clearingLocalOnly: 'Clearing local email list...',
    clearingLocalAndCloud: 'Clearing local and cloud emails...',
    deletingEmails: 'Deleting emails',
    someCloudDeletesFailed: 'Some cloud deletions failed',
    andMore: 'and {count} more',
    confirmClearLocal: 'Continue to clear local list?',
    clearAllAborted: 'Clear operation cancelled',
    clearAllPartialSuccess: 'Partially cleared',
    cloudDeletesFailed: 'cloud deletions failed',
    clearAllSuccess: 'All emails cleared',
    clearAllFailed: 'Failed to clear',
    startMonitoringEmail: 'Start monitoring email',
    confirmAutoLogin: 'Auto-login to Augment?\n\nClick "OK" to:\n1. Clear login cache\n2. Open login window\n3. Auto-fill email\n4. Wait for you to complete CAPTCHA',
    loginWindowOpened: 'Login window opened, please complete CAPTCHA',
    openLoginFailed: 'Failed to open login window',
    codeFound: 'Verification code found',
    settingsSaved: 'Settings saved',
    noEmailsToExport: 'No emails to export',
    exportSuccess: 'Email list exported',
    importSuccess: 'Successfully imported {count} emails, skipped {skipped} duplicates',
    noEmailsImported: 'No emails imported',
    importFailed: 'Import failed',
    loadEmailsFailed: 'Failed to load email list',
    quickGetToken: 'Quick Get Token',
    quickGetTokenHint: 'Auto-login to Augment and get token',
    stopQuickGet: 'Stop',
    quickGetStopped: 'Auto-get stopped',
    startingQuickGet: 'Starting auto-get...',
    waitingForLogin: 'Please complete login and CAPTCHA...',
    generatingToken: 'Generating token...',
    quickRegister: 'Quick Register',
    quickRegisterHint: 'Auto-fill email and verification code to complete Augment account registration',
    stopQuickRegister: 'Stop Register',
    quickRegisterStopped: 'Auto-register stopped',
    startingQuickRegister: 'Starting auto-register...',
    waitingForRegistration: 'Please complete CAPTCHA, waiting for auto-registration...',
    registrationCompleted: 'Registration process completed',
    quickRegisterFailed: 'Auto-register failed',
    tokenSavedSuccess: 'Token saved to list automatically!',
    tokenSavedSuccessDetail: 'Token obtained and saved successfully!',
    tokenObtained: 'Token Obtained',
    quickGetFailed: 'Auto-get failed'
  },
  databaseConfig: {
    title: 'Database Configuration',
    host: 'Host Address',
    port: 'Port',
    database: 'Database Name',
    username: 'Username',
    password: 'Password',
    sslMode: 'SSL Mode',
    enabled: 'Enable Database Storage',
    testConnection: 'Test Connection',
    saveConfig: 'Save Configuration',
    deleteConfig: 'Delete Configuration',
    cancel: 'Cancel',
    sslModes: {
      disable: 'Disable',
      allow: 'Allow',
      prefer: 'Prefer',
      require: 'Require',
      verifyCA: 'Verify CA',
      verifyFull: 'Verify Full'
    },
    messages: {
      testSuccess: 'Database connection test successful!',
      testFailed: 'Database connection test failed',
      saveSuccess: 'Database configuration saved successfully',
      saveFailed: 'Failed to save configuration',
      deleteSuccess: 'Database configuration deleted',
      deleteFailed: 'Failed to delete configuration',
      loadFailed: 'Failed to load configuration',
      confirmDelete: 'Are you sure you want to delete the database configuration? This will disable database storage functionality.'
    },
    placeholders: {
      host: 'localhost',
      port: '5432',
      database: 'augment_tokens',
      username: 'postgres',
      password: 'Enter password'
    }
  },
  emailViewer: {
    title: 'Email Management',
    folder: 'Folder',
    inbox: 'Inbox',
    junk: 'Junk',
    previousPage: 'Previous',
    nextPage: 'Next',
    reload: 'Reload',
    pageInfo: 'Page {current} / {total}',
    totalEmails: '{count} emails total',
    loading: 'Loading...',
    noEmails: 'No emails',
    from: 'From',
    subject: 'Subject',
    date: 'Date',
    hasAttachment: 'Has Attachment',
    viewDetails: 'View Details',
    messages: {
      loadFailed: 'Failed to load emails'
    }
  },
  tokenList: {
    title: 'Saved Tokens',
    empty: 'No saved tokens yet',
    loading: 'Loading tokens...',
    listTitle: 'Token List ({count})',
    refresh: 'Refresh',
    addToken: 'Add Token',
    save: 'Save',
    databaseConfig: 'Database Config',
    sortByTime: 'Sort by creation time',
    batchDelete: 'Batch Delete',
    batchDeleteConfirm: 'Batch Delete Confirmation',
    batchDeleteMessage: 'The following tokens will be deleted:',
    bannedCount: 'Banned',
    expiredCount: 'Expired',
    totalCount: 'Total',
    items: 'items',
    cannotUndo: 'This action cannot be undone. Are you sure?',
    confirmDelete: 'Confirm Delete',
    deleting: 'Deleting...',
    searchPlaceholder: 'Token / Email / Session...',
    searchResults: 'Results: {count}',
    noSearchResults: 'No matching tokens found',
    noDeletableTokens: 'No deletable tokens',
    batchImport: 'Batch Import',
    batchImportTitle: 'Batch Import Tokens',
    batchImportMessage: 'Please paste a JSON array, or click the button below to fill in a sample template:',
    format1Title: 'Format 1: Session String Array (Recommended)',
    format1Desc: 'Paste session string array directly, auto-extract token and email',
    format2Title: 'Format 2: Token Object Array',
    format2Desc: 'Supported fields: access_token (required), tenant_url (required), portal_url (optional), email_note (optional)',
    fillTemplate: 'Fill Template',
    selectFillCount: 'Select Fill Count',
    customCount: 'Custom Count',
    invalidFillCount: 'Please enter a valid count (1-100)',
    fillCountTooLarge: 'Count cannot exceed 100',
    importJsonEmpty: 'JSON content cannot be empty',
    importJsonNotArray: 'JSON must be an array',
    importJsonEmptyArray: 'JSON array cannot be empty',
    missingAccessToken: 'Missing access_token field',
    missingTenantUrl: 'Missing tenant_url field',
    missingTokenOrSession: 'Must provide auth_session or (access_token + tenant_url)',
    invalidTenantUrl: 'Invalid tenant_url format',
    invalidPortalUrl: 'Invalid portal_url format',
    invalidSession: 'Invalid auth_session format',
    importJsonParseError: 'JSON parse error',
    importErrorsFound: '{count} error(s) found',
    importPreviewReady: 'Ready to import {count} token(s)',
    confirmImport: 'Confirm Import',
    importing: 'Importing...',
    extractingFromSession: 'Extracting tokens from sessions ({current}/{total})...',
    sessionExtractionFailed: 'Session extraction failed',
    cancel: 'Cancel'
  },
  tokenCard: {
    banned: 'Banned',
    active: 'Active',
    inactive: 'Inactive',
    expired: 'Expired',
    expiry: 'Expires',
    balance: 'Balance',
    copyEmailNote: 'Copy Email Note',
    selectEditor: 'Select Editor',
    copyMenu: 'Copy',
    copyToken: 'Copy Token',
    copyTenantUrl: 'Copy Tenant URL',
    copyPortalUrl: 'Copy Portal URL',
    copyAuthSession: 'Copy Auth Session',
    checkAccountStatus: 'Check Account Status',
    checkDisabled: 'Check disabled, right-click to enable',
    enableCheck: 'Enable Check',
    disableCheck: 'Disable Check',
    openPortal: 'Open Portal',
    exportJson: 'Export JSON',
    editToken: 'Edit Token',
    deleteToken: 'Delete Token',
    canUse: 'Can Use',
    exhausted: 'Usage Exhausted',
    tokenInvalid: 'Token Invalid',
    networkError: 'Network Error',
    clickToViewDetails: 'Click to view details',
    suspensionDetails: 'Suspension Details',
    suspensionType: 'Suspension Type',
    reason: 'Reason',
    date: 'Date',
    noSuspensionData: 'No suspension data available',
    rawData: 'Raw Data'
  },
  tokenForm: {
    title: 'Add/Edit Token',
    addTitle: 'Add Token',
    editTitle: 'Edit Token',
    tenantUrl: 'Tenant URL',
    tenantUrlPlaceholder: 'https://example.augmentcode.com/',
    accessToken: 'Access Token',
    accessTokenPlaceholder: 'Please enter access token...',
    portalUrl: 'Portal URL',
    portalUrlPlaceholder: 'https://portal.example.com/',
    portalUrlHelp: 'Used to view account balance and expiration time',
    emailNote: 'Email Note',
    emailNotePlaceholder: 'Please enter email-related notes',
    emailNoteHelp: 'Used to record email information related to this Token',
    optional: 'Optional',
    required: 'Required',
    save: 'Save',
    update: 'Update',
    cancel: 'Cancel',
    manualTab: 'Manual Input',
    sessionTab: 'Session Import',
    sessionImportTitle: 'Import from Session',
    sessionImportDescription: 'Paste your Augment Session to automatically extract Token information',
    sessionPlaceholder: 'Please paste Session string...',
    importSession: 'Import'
  },
  tokenGenerator: {
    title: 'Generate Augment Token',
    description: 'Follow these steps to get your Augment access token',
    oauthTab: 'OAuth Flow',
    sessionTab: 'Session Import',
    step1: 'Step 1: Generate Augment Authorization URL',
    step2: 'Step 2: Enter Authorization Code',
    step3: 'Step 3: Augment Access Token',
    step4: 'Step 4: Save Token',
    generateUrl: 'Generate Augment Authorization URL',
    authUrlLabel: 'Authorization URL:',
    authUrlPlaceholder: 'Click the button above to generate authorization URL',
    openAuthUrl: 'Open Authorization URL',
    authCode: 'Authorization Code',
    authCodePlaceholder: 'Paste authorization code JSON here...',
    getToken: 'Get Access Token',
    tenantUrl: 'Tenant URL',
    accessToken: 'Access Token',
    accessTokenLabel: 'Access Token:',
    tenantUrlLabel: 'Tenant URL:',
    portalUrl: 'Portal URL',
    portalUrlPlaceholder: 'Please enter Portal address (optional)',
    emailNote: 'Email Note',
    emailNotePlaceholder: 'Please enter email related note (optional)',
    banStatus: 'Account Status',
    saveToken: 'Save Token',
    saveAndClose: 'Save and Close',
    copyUrl: 'Copy URL',
    copyTenantUrl: 'Copy Tenant URL',
    copyAccessToken: 'Copy Access Token',
    copy: 'Copy',
    sessionImportTitle: 'Import Token via Session',
    sessionImportDescription: 'Paste your auth session to quickly import token and user info',
    sessionPlaceholder: 'Paste auth session here...',
    importSession: 'Import Session',
    autoImportSession: 'Auto Import',
    autoImportBrowserTitle: 'Augment Login - Auto Import',
    importingSession: 'Importing...'
  },
  sessionHelp: {
    title: 'How to Get Auth Session',
    step1Title: 'Step 1: Login to Augment',
    step1Content: 'Login to your Augment account in your browser:',
    step1LoginLink: 'https://login.augmentcode.com',
    step1LinkPrefix: 'Then visit:',
    step1Link: 'https://auth.augmentcode.com',
    step2Title: 'Step 2: Open Browser DevTools',
    step2Content: 'Press F12 or right-click on the page and select "Inspect" to open DevTools',
    step3Title: 'Step 3: Find Cookie',
    step3Content: 'In DevTools, click the Application tab, then expand Cookies in the left sidebar and select https://auth.augmentcode.com',
    step4Title: 'Step 4: Copy session value',
    step4Content: 'In the Cookie list, find the item named session, double-click its Value column and copy the complete session value',
    step5Title: 'Step 5: Paste into input box',
    step5Content: 'Paste the copied session value into the input box above, then click the "Import Session" button',
    closeButton: 'Close'
  },
  storage: {
    localStorage: 'Local Storage',
    dualStorage: 'Dual Storage',
    databaseStorage: 'Database Storage',
    unsaved: 'Unsaved',
    saved: 'Saved',
    status: 'Storage Status',
    syncData: 'Click to sync data',
    detectDatabase: 'Click to detect database',
    clickToSync: 'Click to perform bidirectional sync',
    clickToDetect: 'Click to detect database connection',
    local: 'Local Storage',
    dual: 'Dual Storage',
    database: 'Database Storage',
    unknown: 'Unknown'
  },
  buttons: {
    save: 'Save',
    cancel: 'Cancel',
    delete: 'Delete',
    edit: 'Edit',
    close: 'Close',
    copy: 'Copy',
    refresh: 'Refresh',
    add: 'Add',
    confirm: 'Confirm',
    back: 'Back'
  },
  messages: {
    tokenSaved: 'Token saved successfully',
    tokenUpdated: 'Token updated successfully',
    tokenLoadSuccess: 'Tokens loaded successfully',
    tokenLoadFailed: 'Failed to load tokens',
    tokenSaveFailed: 'Failed to save token',
    tokenUpdateFailed: 'Failed to update token',
    copySuccess: 'URL copied to clipboard!',
    copyFailed: 'Failed to copy URL',
    tenantUrlCopied: 'Tenant URL copied to clipboard!',
    portalUrlCopied: 'Portal URL copied to clipboard!',
    copyPortalUrlFailed: 'Failed to copy Portal URL',
    accessTokenCopied: 'Access token copied to clipboard!',
    generateUrlError: 'Failed to generate authorization URL',
    getTokenError: 'Failed to get token',
    syncComplete: 'Bidirectional sync completed',
    syncFailed: 'Sync failed',
    databaseDetected: 'Database connection detected successfully, switched to dual storage mode',
    databaseNotDetected: 'No database connection detected, still in local storage mode',
    openAppHomeFailed: 'Failed to open app home',
    openPluginHomeFailed: 'Failed to open plugin home',
    tokenDeleted: 'Token deleted',
    tokenDeleteFailed: 'Token deletion failed: specified token not found',
    deleteFailed: 'Failed to delete token',
    newTokenSaved: 'New token saved!',
    error: 'Error',
    gettingToken: 'Getting access token...',
    tokenGetSuccess: 'Access token retrieved successfully!',
    portalLinkCopied: 'Portal link copied to clipboard!',
    copyPortalLinkFailed: 'Failed to copy portal link',
    openPortalFailed: 'Failed to open portal',
    sessionRequired: 'Please enter auth session',
    importingSession: 'Importing session...',
    sessionImportSuccess: 'Session imported successfully!',
    sessionImportStarting: 'Starting session import...',
    sessionImportExtractingToken: 'Extracting access token...',
    sessionImportGettingUserInfo: 'Getting user info...',
    sessionImportSavingToken: 'Saving token...',
    sessionImportComplete: 'Import complete!',
    sessionImportFailed: 'Import failed',
    sessionAutoImported: 'Session auto-imported!',
    sessionAutoImportFailed: 'Session auto-import failed',
    openAuthUrlFailed: 'Failed to open authorization URL',
    oauthTitle: 'Augment OAuth Authorization',
    appHomeTitle: 'App Home - Augment Token Manager',
    pluginHomeTitle: 'Plugin Home - Augment Code Auto',
    noTokensToCheck: 'No tokens to check',
    accountStatusCheckComplete: 'Account status check complete ({success}/{total})',
    accountStatusCheckFailed: 'Account status check failed ({failed}/{total})',
    accountStatusCheckPartial: 'Account status partially checked ({success}/{total})',
    accountStatusCheckError: 'Error occurred while checking account status',
    autoSaveFailedCannotClose: 'Auto-save failed, cannot close',
    bidirectionalSyncing: 'Performing bidirectional sync...',
    bidirectionalSyncComplete: 'Bidirectional sync complete',
    syncCompleteButStatusFailed: 'Sync complete, but account status check failed',
    refreshingTokenStatus: 'Refreshing token status and portal information...',
    refreshComplete: 'Refresh complete',
    refreshFailed: 'Refresh failed',
    databaseConfigSaved: 'Database configuration saved, storage functionality updated',
    databaseConfigDeleted: 'Database configuration deleted, switched to local storage only',
    bidirectionalSyncSaveComplete: 'Bidirectional sync save complete',
    saveFailed: 'Save failed',
    updatingToken: 'Updating token...',
    savingToken: 'Saving token...',
    updateFailed: 'Update token failed',
    tokenCopied: 'Token copied to clipboard!',
    copyTokenFailed: 'Failed to copy token',
    tenantUrlCopied: 'Tenant URL copied to clipboard!',
    copyTenantUrlFailed: 'Failed to copy tenant URL',
    authSessionCopied: 'Auth Session copied to clipboard!',
    copyAuthSessionFailed: 'Failed to copy Auth Session',
    noAuthSession: 'This token has no Auth Session',
    tokenJsonExported: 'Token JSON copied to clipboard!',
    exportTokenJsonFailed: 'Failed to export Token JSON',
    emailNoteCopied: 'Email note copied to clipboard!',
    copyEmailNoteFailed: 'Failed to copy email note',
    batchImportSuccess: 'Successfully imported {count} token(s)',
    batchImportSuccessWithSkipped: 'Successfully imported {success} token(s), skipped {skipped} duplicate email(s)',
    duplicateEmailSkipped: 'Email account already exists: {email}, skipped',
    batchImportFailed: 'Batch import failed',
    editorTokenFileCreated: '{editor} Token file created',
    createEditorTokenFileFailed: 'Failed to create {editor} Token file: {error}',
    openingEditor: 'Opening {editor}...',
    operationFailed: 'Operation failed',
    accountBanned: 'Account banned',
    accountStatusNormal: 'Account status normal',
    statusCheckFailed: 'Status check failed',
    checkComplete: 'Check complete',
    checkFailed: 'Check failed',
    getStorageStatusFailed: 'Failed to get storage status',
    syncFailed: 'Sync failed',
    bidirectionalSyncComplete: 'Bidirectional sync complete',
    databaseDetected: 'Database connection detected successfully, switched to dual storage mode',
    databaseNotDetected: 'No database connection detected, still in local storage mode',
    tokenNotFound: 'Token not found',
    tokenDeleted: 'Token deleted',
    tokenInvalid: 'Token invalid',
    refreshFailedNoTokens: 'Refresh failed: No tokens loaded',
    accountStatus: 'Account Status',
    checkDisabled: 'Check disabled',
    checkEnabled: 'Check enabled',
    checkIsDisabled: 'Check is disabled for this account, right-click refresh button to enable',
    autoDisabledBanned: 'Account banned, check automatically disabled',
    autoDisabledExpired: 'Account expired, check automatically disabled',
    sessionErrorOrAccountBanned: 'Session error or account banned'
  },
  validation: {
    required: 'This field is required',
    invalidUrl: 'Please enter a valid URL format',
    invalidEmail: 'Please enter a valid email address',
    tenantUrlRequired: 'Tenant URL cannot be empty',
    accessTokenRequired: 'Access token cannot be empty'
  },
  loading: {
    generating: 'Generating...',
    loading: 'Loading...',
    saving: 'Saving...',
    syncing: 'Syncing...',
    refreshing: 'Refreshing...',
    deleting: 'Deleting...',
    importing: 'Importing...'
  },
  dialogs: {
    selectOpenMethod: 'Select Open Method',
    copyLink: 'Copy Link',
    openExternal: 'Open External',
    openInternal: 'Open Internal',
    dontOpen: "Don't Open",
    cancel: 'Cancel',
    confirmDelete: 'Confirm Delete',
    confirmDeleteMessage: 'Are you sure you want to delete this Token? This action cannot be undone.',
    delete: 'Delete',
    appHomeTitle: 'App Home - Select Open Method',
    pluginHomeTitle: 'Plugin Home - Select Open Method',
    authUrlTitle: 'Authorization URL Open Method Selection Dialog'
  },
  proxyConfig: {
    title: 'Proxy Settings',
    enableProxy: 'Enable Proxy',
    proxyType: 'Proxy Type',
    host: 'Proxy Server',
    port: 'Port',
    username: 'Username',
    password: 'Password',
    customUrl: 'Proxy URL',
    optional: 'Optional',
    testConnection: 'Test Connection',
    save: 'Save',
    delete: 'Delete Configuration',
    confirmDelete: 'Confirm Delete',
    confirmDeleteMessage: 'Are you sure you want to delete the proxy configuration?',
    types: {
      system: 'System Proxy',
      http: 'HTTP Proxy',
      https: 'HTTPS Proxy',
      socks5: 'SOCKS5 Proxy',
      customUrl: 'Edge Function'
    },
    help: {
      system: 'Automatically detect and use system proxy settings',
      http: 'Use HTTP protocol proxy server',
      https: 'Use HTTPS protocol proxy server',
      socks5: 'Use SOCKS5 protocol proxy server',
      customUrl: 'Forward all API requests through cloud functions'
    },
    detailedHelp: {
      customUrl: 'Supports Supabase Edge Functions, Cloudflare Workers, Vercel Edge Functions, and more. Please enter the full URL of your deployed function.'
    },
    placeholders: {
      host: 'e.g., 127.0.0.1 or proxy.example.com',
      port: 'e.g., 8080',
      username: 'Enter username if proxy requires authentication',
      password: 'Enter password if proxy requires authentication',
      customUrl: 'e.g., https://your-project.supabase.co/functions/v1/proxy'
    },
    messages: {
      autoSaveSuccess: 'Auto-save success',
      autoSaveFailed: 'Auto-save failed',
      saveSuccess: 'Proxy configuration saved',
      saveFailed: 'Failed to save proxy configuration',
      deleteSuccess: 'Proxy configuration deleted',
      deleteFailed: 'Failed to delete proxy configuration',
      testSuccess: 'Proxy connection test successful',
      testFailed: 'Proxy connection test failed',
      proxyConfigSaved: 'Proxy configuration saved and applied',
      lastTest: 'Last Test',
      testSuccessWithLatency: 'Success',
      testFailedStatus: 'Failed'
    }
  },
  credit: {
    title: 'Credit Usage Statistics',
    viewUsage: 'View Usage Details',
    usageStats: 'Usage Statistics',
    modelDistribution: 'Model Usage Distribution',
    today: 'Today',
    total: 'Total',
    remaining: 'Remaining Credits',
    thisWeek: 'This Week',
    thisCycle: 'This Cycle',
    cycleTrend: 'Cycle Trend',
    credits: 'credits',
    loading: 'Loading...',
    error: 'Failed to load',
    noData: 'No data available',
    refresh: 'Refresh',
    close: 'Close',
    percentage: 'Percentage'
  }
}
